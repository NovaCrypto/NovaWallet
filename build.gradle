/*
 *  NovaWallet, Cryptocurrency Wallet for Android
 *  Copyright (C) 2018 Alan Evans, NovaCrypto
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 *  Original source: https://github.com/NovaCrypto/NovaWallet
 *  You can contact the authors via github issues.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.2.30'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.17.0' apply false
}

allprojects {
    buildscript {
        repositories {
            google()
            jcenter()
        }
    }
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    // Generate a dependency version update report for release
    // ./gradlew dependencyUpdates -Drevision=release
    // https://github.com/ben-manes/gradle-versions-plugin
    apply plugin: 'com.github.ben-manes.versions'

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
            allWarningsAsErrors = true
        }
    }
}

dependencyUpdates {
    outputFormatter = { result ->
        if (!result.outdated.dependencies.isEmpty()) {
            throw new GradleException('Abort, there are dependencies to update.')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task('installSharedIdea', type: Copy) {
    description = 'Copy the shared intellij files into local .idea/'
    from 'ideaShared/'
    into '.idea/'
}

task('backupCopyrightIdea', type: Copy) {
    description = 'Copy the local .idea/copyright to shared intellij files'
    into 'ideaShared/copyright/'
    from '.idea/copyright/'
}

task('setup') {
    group = 'Setup'
    description = 'Prepare or update the IDE working directory'
    dependsOn 'installSharedIdea'
}
